{"version":3,"file":"bundle.js","sources":["scnEnd.js","config.js","resources.js","top/top-player.js","top/obstacles/obstacle.js","top/obstacles/crate.js","top/obstacles/crates.js","top/obstacles/index.js","top/floor.js","top/health.js","top/platform.js","top/background.js","top/top.js","bottom/miniGame.js","bottom/collating-game/officeDoc.js","bottom/collating-game/collatingGame.js","bottom/coffee-game/coffeeItem.js","bottom/coffee-game/coffeeGame.js","bottom/printer-game/light.js","bottom/printer-game/printer-game.js","bottom/bottom.js","scnMain.js","game.js"],"sourcesContent":["import * as ex from \"excalibur\";\nexport class ScnEnd extends ex.Scene {\n    onInitialize(engine) {\n        const gameOverLabel = new ex.Label({\n            x: this.engine.drawWidth / 2,\n            y: this.engine.drawHeight / 2,\n            text: \"Your boss caught you daydreaming. Game over.\",\n            textAlign: ex.TextAlign.Center,\n            fontSize: 36,\n            fontFamily: \"Arial\"\n        });\n        this.add(gameOverLabel);\n        const resetButton = new ResetButton({\n            x: engine.drawWidth / 2,\n            y: engine.drawHeight / 2 + 100\n        });\n        this.add(resetButton);\n    }\n}\nclass ResetButton extends ex.Actor {\n    /**\n     *\n     */\n    constructor({ x, y }) {\n        super({ x, y, width: 100, height: 50, color: ex.Color.Blue });\n    }\n    onInitialize(engine) {\n        this.on(\"pointerup\", () => this.reset(engine));\n        const resetLabel = new ex.Label({\n            x: 0,\n            y: 15,\n            text: \"Restart\",\n            textAlign: ex.TextAlign.Center,\n            fontSize: 24,\n            color: ex.Color.White\n        });\n        this.add(resetLabel);\n    }\n    reset(engine) {\n        engine.goToScene(\"main\");\n    }\n}\n//# sourceMappingURL=scnEnd.js.map","import { Random, Vector } from \"excalibur\";\nconst rand = new Random(12345678910);\nexport default {\n    AnalyticsEndpoint: \"https://ludum41stats.azurewebsites.net/api/HttpLudum41StatsTrigger?code=eumYNdyRh0yfBAk0NLrfrKkXxtGsX7/Jo5gAcYo13k3GcVFNBdG3yw==\",\n    GameWidth: 800,\n    GameHeight: 800,\n    // Top Floor config\n    Floor: {\n        Speed: -200,\n        Height: 5\n    },\n    // Top Player config\n    TopPlayer: {\n        StartingXPercent: 0.25,\n        Width: 30,\n        Height: 50\n    },\n    Health: {\n        Pos: new Vector(10, 10),\n        Default: 10,\n        FontSize: 50\n    },\n    MiniGames: {\n        Collating: {\n            NumberOfDocuments: 5,\n            NumberOfWinsToProceed: 3\n        }\n    },\n    Platform: {\n        Width: 100,\n        Height: 10,\n        HeightAboveFloor: 60,\n        MinSpawnInterval: 2000,\n        MaxSpawnInterval: 3000\n    },\n    PrinterMiniGame: {\n        GridDimension: 4\n    },\n    /**\n     * Obstacles spawn interval\n     */\n    ObstacleSpawnMinInterval: 1000,\n    ObstacleSpawnMaxInterval: 3000,\n    Rand: rand\n};\n//# sourceMappingURL=config.js.map","import { Texture, Sound } from \"excalibur\";\nexport default {\n    txBike: new Texture(\"game/assets/img/bike.png\"),\n    txCrate: new Texture(\"game/assets/img/crate.png\"),\n    txBackground: new Texture(\"game/assets/img/top-bg.png\"),\n    txCollateBackground: new Texture(\"game/assets/img/collate-bg.png\"),\n    txCoffeeMaker: new Texture(\"game/assets/img/coffee-maker.png\"),\n    txCoffeeGrounds: new Texture(\"game/assets/img/coffee-grounds.png\"),\n    sampleSnd: new Sound(\"game/assets/snd/sample-sound.wav\")\n};\n//# sourceMappingURL=resources.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nimport Resources from \"../resources\";\nexport class TopPlayer extends ex.Actor {\n    constructor(engine) {\n        super({\n            x: engine.drawWidth * Config.TopPlayer.StartingXPercent,\n            y: engine.drawHeight / 4,\n            acc: new ex.Vector(0, 800),\n            width: Config.TopPlayer.Width,\n            height: Config.TopPlayer.Height,\n            color: ex.Color.Blue,\n            collisionType: ex.CollisionType.Active\n        });\n        this.engine = engine;\n        this.canJump = false;\n        this.correcting = false;\n        engine.input.pointers.primary.on(\"down\", this.handleInput.bind(this));\n        this.on(\"precollision\", this.handleCollision.bind(this));\n    }\n    onInitialize() {\n        this.z = 5;\n        this.addDrawing(Resources.txBike);\n        // dust\n        const dustEmitter = new ex.ParticleEmitter(-(this.getWidth() / 2) - 8, Config.TopPlayer.Height / 2 - 2, 5, 2);\n        dustEmitter.isEmitting = false;\n        dustEmitter.emitterType = ex.EmitterType.Rectangle;\n        dustEmitter.radius = 5;\n        dustEmitter.minVel = 327;\n        dustEmitter.maxVel = 296;\n        dustEmitter.minAngle = 3.5;\n        dustEmitter.maxAngle = 3.4;\n        dustEmitter.emitRate = 118;\n        dustEmitter.opacity = 0.5;\n        dustEmitter.fadeFlag = true;\n        dustEmitter.particleLife = 200;\n        dustEmitter.maxSize = 1;\n        dustEmitter.minSize = 1;\n        dustEmitter.startSize = 0;\n        dustEmitter.endSize = 0;\n        dustEmitter.acceleration = new ex.Vector(-69, 484);\n        dustEmitter.beginColor = ex.Color.Transparent;\n        dustEmitter.endColor = ex.Color.Black;\n        this.add(dustEmitter);\n        this.dustEmitter = dustEmitter;\n    }\n    // le-sigh workaround for odd collision tunneling issue\n    handleCollision(event) {\n        if (event.side === ex.Side.Bottom) {\n            this.canJump = true;\n        }\n    }\n    handleInput(event) {\n        ex.Logger.getInstance().debug(\"event:\", event);\n        if (event.worldPos.y < this.engine.halfDrawHeight) {\n            this.jump();\n        }\n    }\n    jump() {\n        if (this.canJump) {\n            this.vel = this.vel.add(new ex.Vector(0, -400));\n            this.acc = new ex.Vector(0, 800);\n            this.canJump = false;\n        }\n    }\n    onPostUpdate(engine, delta) {\n        if (!this.canJump) {\n            let virtualVel = new ex.Vector(-Config.Floor.Speed, ex.Util.clamp(this.vel.y, -50, 50));\n            this.rotation = virtualVel.toAngle();\n            this.dustEmitter.isEmitting = false;\n        }\n        else {\n            this.dustEmitter.isEmitting = true;\n            if (this.x < engine.drawWidth * Config.TopPlayer.StartingXPercent) {\n                this.vel.x =\n                    (engine.drawWidth * Config.TopPlayer.StartingXPercent - this.x) / 2;\n            }\n            else if (this.x >\n                engine.drawWidth * Config.TopPlayer.StartingXPercent) {\n                this.x = engine.drawWidth * Config.TopPlayer.StartingXPercent;\n            }\n            this.rotation = 0;\n        }\n    }\n}\n//# sourceMappingURL=top-player.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as ex from \"excalibur\";\nimport { TopPlayer } from \"../top-player\";\nexport class Obstacle extends ex.Actor {\n    /**\n     *\n     */\n    constructor(_a) {\n        var { x, y, speed, onHitPlayer } = _a, props = __rest(_a, [\"x\", \"y\", \"speed\", \"onHitPlayer\"]);\n        super(Object.assign({ x,\n            y, collisionType: ex.CollisionType.Passive, vel: new ex.Vector(speed, 0) }, props));\n        this.onExitViewPort = (engine) => (e) => {\n            // When obstacle passes out of view to the left, NOT from the right ;)\n            // it should be killed\n            if (e.target.x < engine.getWorldBounds().left) {\n                ex.Logger.getInstance().debug(\"Obstacle exited stage left\", e.target);\n                e.target.kill();\n            }\n        };\n        this.onCollision = (event) => {\n            if (event.other instanceof TopPlayer) {\n                this.onHitPlayer();\n                this.kill();\n            }\n        };\n        this.onHitPlayer = onHitPlayer;\n        // Anchor to bottom since\n        // we will be placing it on a \"floor\"\n        this.anchor.setTo(0.5, 1);\n    }\n    onInitialize(engine) {\n        this.on(\"exitviewport\", this.onExitViewPort(engine));\n        this.on(\"collisionstart\", this.onCollision);\n        this.scene.on(\"deactivate\", () => this.kill());\n    }\n}\n//# sourceMappingURL=obstacle.js.map","import Resources from \"../../resources\";\nimport { Obstacle } from \"./obstacle\";\nexport class Crate extends Obstacle {\n    constructor(props) {\n        super(Object.assign({}, props, { width: 16, height: 16 }));\n    }\n    onInitialize(engine) {\n        super.onInitialize(engine);\n        this.addDrawing(Resources.txCrate);\n    }\n}\n//# sourceMappingURL=crate.js.map","import * as ex from \"excalibur\";\nimport Resources from \"../../resources\";\nimport { Obstacle } from \"./obstacle\";\nexport class Crates extends Obstacle {\n    constructor(props) {\n        super(Object.assign({}, props, { width: 16, height: 16 * 3 }));\n    }\n    onInitialize(engine) {\n        super.onInitialize(engine);\n        const crateArgs = {\n            anchor: ex.Vector.Zero,\n            width: 16,\n            height: 16\n        };\n        const crate1 = new ex.Actor(Object.assign({}, crateArgs, { y: -16 }));\n        const crate2 = new ex.Actor(Object.assign({}, crateArgs, { y: -32 }));\n        const crate3 = new ex.Actor(Object.assign({}, crateArgs, { y: -48 }));\n        crate1.addDrawing(Resources.txCrate);\n        crate2.addDrawing(Resources.txCrate);\n        crate3.addDrawing(Resources.txCrate);\n        this.add(crate1);\n        this.add(crate2);\n        this.add(crate3);\n    }\n}\n//# sourceMappingURL=crates.js.map","import { Crate } from \"./crate\";\nimport { Crates } from \"./crates\";\nconst obstacles = [Crate, Crates];\nexport default obstacles;\n//# sourceMappingURL=index.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nexport class Floor extends ex.Actor {\n    /**\n     *\n     */\n    constructor(engine) {\n        super({\n            x: 0,\n            y: engine.drawHeight / 2,\n            width: engine.drawWidth * 2,\n            height: Config.Floor.Height,\n            color: ex.Color.Black,\n            anchor: new ex.Vector(0, 0.5),\n            collisionType: ex.CollisionType.Fixed\n        });\n    }\n}\n//# sourceMappingURL=floor.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nexport class TopHealth extends ex.Label {\n    constructor(engine) {\n        super({\n            x: Config.Health.Pos.x,\n            y: Config.Health.Pos.y + Config.Health.FontSize,\n            fontSize: Config.Health.FontSize,\n            fontUnit: ex.FontUnit.Px,\n            anchor: ex.Vector.Zero.clone(),\n            color: ex.Color.Red,\n            text: Config.Health.Default.toString()\n        });\n        this.health = Config.Health.Default;\n    }\n    onInitialize() {\n        this.z = 4;\n    }\n    onPostUpdate(engine, delta) {\n        if (this.health < 1) {\n            engine.goToScene(\"end\");\n            return;\n        }\n        this.text = this.health.toString();\n    }\n}\n//# sourceMappingURL=health.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as ex from \"excalibur\";\nimport Config from \"../config\";\nexport class Platform extends ex.Actor {\n    constructor(_a) {\n        var { x, y, speed } = _a, props = __rest(_a, [\"x\", \"y\", \"speed\"]);\n        super({\n            x,\n            y,\n            height: Config.Platform.Height,\n            width: Config.Platform.Width,\n            color: ex.Color.Gray,\n            collisionType: ex.CollisionType.Fixed,\n            vel: new ex.Vector(speed, 0)\n            // Anchor to bottom since\n            // we will be placing it on a \"floor\"\n        });\n        this.onExitViewPort = (engine) => (e) => {\n            // When obstacle passes out of view to the left, NOT from the right ;)\n            // it should be killed\n            if (e.target.x < engine.getWorldBounds().left) {\n                ex.Logger.getInstance().debug(\"Obstacle exited stage left\", e.target);\n                e.target.kill();\n            }\n        };\n    }\n    onInitialize(engine) {\n        this.on(\"exitviewport\", this.onExitViewPort(engine));\n        this.scene.on(\"deactivate\", () => this.kill());\n    }\n}\n//# sourceMappingURL=platform.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nimport Resources from \"../resources\";\nexport class Background extends ex.Actor {\n    /**\n     *\n     */\n    constructor(engine) {\n        super({\n            x: 0,\n            y: 0,\n            width: engine.canvasWidth * 2,\n            height: Config.Floor.Height,\n            anchor: ex.Vector.Zero,\n            vel: new ex.Vector(Config.Floor.Speed * 1.5, 0)\n        });\n        this.drawSlices = new Array(Background.Slices * 2);\n        this.slices = new Array(Background.Slices);\n        this._offscreen = document.createElement(\"canvas\");\n        this._offscreen.width = Background.Slices * Background.SliceWidth * 2;\n        this._offscreen.height = engine.drawHeight;\n        this._offscreenCtx = this._offscreen.getContext(\"2d\");\n    }\n    onInitialize() {\n        const { txBackground } = Resources;\n        for (let i = 0; i < Background.Slices; i++) {\n            const x = i * Background.SliceWidth;\n            this.slices[i] = new ex.Sprite({\n                image: txBackground,\n                x,\n                y: 0,\n                width: Background.SliceWidth,\n                height: txBackground.height\n            });\n        }\n        this.fillSlices(0, Background.Slices * 2);\n        this.drawToOffscreen(0, Background.Slices * 2);\n    }\n    onPostUpdate(engine, delta) {\n        if (this.x <= -engine.halfDrawWidth) {\n            ex.Logger.getInstance().info(\"Reset background\");\n            this.x = 0;\n            this.drawSlices = this.drawSlices.slice(16);\n            this.drawToOffscreen(0, 16);\n            this.fillSlices(16, Background.Slices * 2);\n        }\n    }\n    onPostDraw(ctx, delta) {\n        ctx.drawImage(this._offscreen, this.x, this.y);\n    }\n    fillSlices(start, to) {\n        for (let i = start; i < to; i++) {\n            this.drawSlices[i] = this.slices[Config.Rand.integer(0, this.slices.length - 1)];\n        }\n        this.drawToOffscreen(start, to);\n        ex.Logger.getInstance().debug(\"Picked bg slices\", this.drawSlices.length);\n    }\n    drawToOffscreen(start, to) {\n        for (let i = start; i < to; i++) {\n            const slice = this.drawSlices[i];\n            const x = i * Background.SliceWidth;\n            slice && slice.draw(this._offscreenCtx, x, 0);\n        }\n    }\n}\nBackground.Slices = 16;\nBackground.SliceWidth = 50;\n//# sourceMappingURL=background.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nimport Obstacles from \"./obstacles\";\nimport { Floor } from \"./floor\";\nimport { TopPlayer } from \"./top-player\";\nimport { TopHealth } from \"./health\";\nimport { Platform } from \"./platform\";\nimport { Background } from \"./background\";\nexport class TopSubscene {\n    constructor(_engine) {\n        this._engine = _engine;\n        this.onPlayerHitObstacle = () => {\n            this.healthMeter.health--;\n        };\n    }\n    setup(scene) {\n        this.scene = scene;\n        this.floor = new Floor(this._engine);\n        this.player = new TopPlayer(this._engine);\n        this.healthMeter = new TopHealth(this._engine);\n        this.background = new Background(this._engine);\n        this.spawnTimer = new ex.Timer(() => {\n            this.spawnObstacle(this._engine, scene);\n        }, 1000, true);\n        this.platformTimer = new ex.Timer(() => {\n            this.spawnPlatform(this._engine, scene);\n        }, 2000, true);\n        this.platformTimer2 = new ex.Timer(() => {\n            this.spawnPlatform2(this._engine, scene);\n        }, 3000, true);\n        scene.add(this.spawnTimer);\n        scene.add(this.platformTimer);\n        scene.add(this.platformTimer2);\n        scene.add(this.floor);\n        scene.add(this.player);\n        scene.add(this.healthMeter);\n        scene.add(this.background);\n    }\n    teardown(scene) {\n        scene.remove(this.floor);\n        scene.remove(this.player);\n        scene.remove(this.healthMeter);\n        scene.remove(this.spawnTimer);\n        scene.remove(this.background);\n    }\n    spawnObstacle(engine, scene) {\n        const x = engine.drawWidth + 200;\n        const ObstacleDef = Obstacles[Config.Rand.integer(0, Obstacles.length - 1)];\n        const ob = new ObstacleDef({\n            x,\n            y: this.floor.getTop(),\n            speed: Config.Floor.Speed,\n            onHitPlayer: this.onPlayerHitObstacle\n        });\n        ex.Logger.getInstance().debug(\"Spawned obstacle\", ob);\n        scene.add(ob);\n        const newInterval = Config.Rand.integer(Config.ObstacleSpawnMinInterval, Config.ObstacleSpawnMaxInterval);\n        this.spawnTimer.reset(newInterval);\n    }\n    spawnPlatform(engine, scene) {\n        const x = engine.drawWidth + 100;\n        const platform = new Platform({\n            x,\n            y: this.floor.getTop() - Config.Platform.HeightAboveFloor,\n            speed: Config.Floor.Speed\n        });\n        ex.Logger.getInstance().debug(\"Spawned platform\", platform);\n        scene.add(platform);\n        const newInterval = Config.Rand.integer(Config.Platform.MinSpawnInterval, Config.Platform.MaxSpawnInterval);\n        this.platformTimer.reset(newInterval);\n    }\n    spawnPlatform2(engine, scene) {\n        const x = engine.drawWidth + 100;\n        const platform = new Platform({\n            x,\n            y: this.floor.getTop() - Config.Platform.HeightAboveFloor * 2,\n            speed: Config.Floor.Speed\n        });\n        ex.Logger.getInstance().debug(\"Spawned platform\", platform);\n        this.scene.add(platform);\n        const newInterval = Config.Rand.integer(Config.Platform.MinSpawnInterval * 2, Config.Platform.MaxSpawnInterval * 2);\n        this.platformTimer2.reset(newInterval);\n    }\n}\n//# sourceMappingURL=top.js.map","export class MiniGame {\n    constructor(scene, bottomSubscene) {\n        this.miniGameActors = [];\n        this.scene = scene;\n        this.bottomSubscene = bottomSubscene;\n    }\n    start() {\n        if (!this._isSetUp) {\n            this.setup(); //initialize actors and add them to the miniGameActors collection.\n            for (let i = 0; i < this.miniGameActors.length; i++) {\n                this.scene.add(this.miniGameActors[i]);\n            }\n        }\n        this._isSetUp = true;\n    }\n    cleanUp() {\n        for (let i = 0; i < this.miniGameActors.length; i++) {\n            this.scene.remove(this.miniGameActors[i]);\n            this._isSetUp = false;\n        }\n        this.miniGameActors = [];\n    }\n    onSucceed() {\n        this.cleanUp();\n        this.bottomSubscene.startRandomMiniGame();\n    }\n    onFail() {\n        this.cleanUp();\n        this.bottomSubscene.startRandomMiniGame();\n    }\n}\n//# sourceMappingURL=miniGame.js.map","import { Actor, Color } from \"excalibur\";\nexport class OfficeDoc extends Actor {\n    constructor(pageNumber) {\n        super();\n        this._pageNumber = pageNumber;\n        this.color = Color.Green;\n    }\n    get pageNumber() {\n        return this._pageNumber;\n    }\n}\nexport class OfficeDocSet {\n    constructor(numDocuments) {\n        this._documents = [];\n        this._playerSortedStack = [];\n        this._numDocuments = numDocuments;\n        for (var i = 0; i < this._numDocuments; i++) {\n            this._documents.push(new OfficeDoc(i));\n        }\n    }\n    //attempt to add this document to the sorted stack\n    tryAddToSortedStack(documentIn) {\n        if (documentIn.pageNumber === this._playerSortedStack.length) {\n            this._playerSortedStack.push(documentIn);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    clear() {\n        this._playerSortedStack = [];\n    }\n    isComplete() {\n        return this._playerSortedStack.length === this._numDocuments;\n    }\n    getScrambledDocumentSet() {\n        var docsArr = this._documents;\n        var currentIndex = docsArr.length, temporaryValue, randomIndex;\n        while (0 !== currentIndex) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temporaryValue = docsArr[currentIndex];\n            docsArr[currentIndex] = docsArr[randomIndex];\n            docsArr[randomIndex] = temporaryValue;\n        }\n        return docsArr;\n    }\n}\n//# sourceMappingURL=officeDoc.js.map","import { Actor, Label, Color, Vector } from \"excalibur\";\nimport { MiniGame } from \"../../bottom/miniGame\";\nimport { OfficeDocSet } from \"./officeDoc\";\nimport Config from \"../../config\";\nimport Resources from \"../../resources\";\nexport class CollatingGame extends MiniGame {\n    constructor(scene, winsRequired, bottomSubscene) {\n        super(scene, bottomSubscene);\n        this._docLabels = [];\n        this._winsRequired = 0;\n        this._currentWins = 0;\n        this._winsRequired = winsRequired;\n    }\n    setup() {\n        var numDocs = Config.MiniGames.Collating.NumberOfDocuments;\n        // background\n        const bg = new Actor({\n            x: 0,\n            y: this.scene.engine.drawHeight / 2,\n            anchor: Vector.Zero\n        });\n        bg.addDrawing(Resources.txCollateBackground);\n        this.miniGameActors.push(bg);\n        this._docSet = new OfficeDocSet(numDocs);\n        this._scrambledOfficeDocs = this._docSet.getScrambledDocumentSet();\n        //this.reset();\n        for (let i = 0; i < this._scrambledOfficeDocs.length; i++) {\n            //add to the scene here\n            this._scrambledOfficeDocs[i].x = 100 * i + 200;\n            this._scrambledOfficeDocs[i].setWidth(50);\n            this._scrambledOfficeDocs[i].setHeight(50);\n            this._scrambledOfficeDocs[i].y = 500;\n            this.wireUpClickEvent(this._scrambledOfficeDocs[i]);\n            var docLabel = new Label({\n                x: this._scrambledOfficeDocs[i].x,\n                y: this._scrambledOfficeDocs[i].y + 50,\n                color: Color.Red,\n                text: (this._scrambledOfficeDocs[i].pageNumber + 1).toString()\n            });\n            docLabel.fontSize = 16;\n            this._docLabels.push(docLabel);\n            this.miniGameActors.push(docLabel);\n            this.miniGameActors.push(this._scrambledOfficeDocs[i]);\n        }\n    }\n    reset() { }\n    wireUpClickEvent(officeDoc) {\n        officeDoc.on(\"pointerup\", evt => {\n            var clickedDoc = evt.target;\n            if (this._docSet.tryAddToSortedStack(clickedDoc)) {\n                //update ui\n                clickedDoc.color = Color.Magenta;\n                if (this._docSet.isComplete()) {\n                    //you won\n                    console.log(\"you won the collating game\");\n                    this._currentWins++;\n                    if (this._currentWins >= this._winsRequired) {\n                        //move on to the next mini game\n                        this._currentWins = 0;\n                        this.onSucceed();\n                    }\n                    else {\n                        this.resetDocuments();\n                    }\n                }\n            }\n        });\n    }\n    //shuffle the pages around visually\n    resetDocuments() {\n        this._docSet.clear();\n        this._scrambledOfficeDocs = this._docSet.getScrambledDocumentSet();\n        for (let i = 0; i < this._scrambledOfficeDocs.length; i++) {\n            this._scrambledOfficeDocs[i].x = 100 * i + 200;\n            this._scrambledOfficeDocs[i].color = Color.Green;\n            this._docLabels[i].text = (this._scrambledOfficeDocs[i].pageNumber + 1).toString();\n        }\n    }\n}\n//# sourceMappingURL=collatingGame.js.map","import * as ex from \"excalibur\";\nexport class CoffeeItem extends ex.Actor {\n    constructor(args) {\n        super(args);\n        this._isHighlighted = false;\n    }\n    onInitialize(engine) {\n        this.on(\"pointerup\", event => {\n            if (this._isHighlighted) {\n                // TODO play foley sound effect\n                // emit an event for the correct item being clicked\n                this.scene.emit(\"coffeeClick\");\n                this.unHighlight();\n            }\n            else {\n                // TODO play error sound?\n            }\n        });\n    }\n    highlight() {\n        this._originalColor = this.color;\n        this.color = ex.Color.Green;\n        this._isHighlighted = true;\n    }\n    unHighlight() {\n        this.color = this._originalColor;\n        this._isHighlighted = false;\n    }\n}\n//# sourceMappingURL=coffeeItem.js.map","import * as ex from \"excalibur\";\nimport { MiniGame } from \"../miniGame\";\nimport { CoffeeItem } from \"./coffeeItem\";\nimport Resources from \"../../resources\";\nexport class CoffeeGame extends MiniGame {\n    constructor(scene, bottomSubscene) {\n        super(scene, bottomSubscene);\n        this._stepCount = 0;\n    }\n    setup() {\n        this._stepCount = 0;\n        let coffeeFilter = new CoffeeItem({\n            x: 200,\n            y: 500,\n            width: 50,\n            height: 50,\n            color: ex.Color.White\n        });\n        this.miniGameActors.push(coffeeFilter);\n        coffeeFilter.highlight();\n        let coffeeGrounds = new CoffeeItem({\n            x: 300,\n            y: 500,\n            width: 60,\n            height: 90,\n            color: ex.Color.Red\n        });\n        coffeeGrounds.addDrawing(Resources.txCoffeeGrounds);\n        this.miniGameActors.push(coffeeGrounds);\n        let waterPitcher = new CoffeeItem({\n            x: 100,\n            y: 500,\n            width: 100,\n            height: 150,\n            color: ex.Color.Cyan\n        });\n        this.miniGameActors.push(waterPitcher);\n        let coffeeMaker = new CoffeeItem({\n            x: 400,\n            y: 600,\n            width: 150,\n            height: 250,\n            color: ex.Color.Black\n        });\n        coffeeMaker.addDrawing(Resources.txCoffeeMaker);\n        this.miniGameActors.push(coffeeMaker);\n        let coffeeCup = new CoffeeItem({\n            x: 550,\n            y: 500,\n            width: 50,\n            height: 50,\n            color: ex.Color.Orange\n        });\n        this.miniGameActors.push(coffeeCup);\n        this.scene.on(\"coffeeClick\", () => {\n            console.log(\"coffee click\");\n            this._stepCount++;\n            if (this._stepCount >= this.miniGameActors.length) {\n                // TODO play coffee brewing animation\n                // TODO ramp up the music/difficulty in the top runner\n                // TODO hiding the actors isn't enough, they need their input disabled\n                // maybe we should remove them from the scene?\n                this.onSucceed();\n            }\n            else {\n                let coffeeItem = this.miniGameActors[this._stepCount];\n                coffeeItem.highlight();\n            }\n        });\n    }\n}\n//# sourceMappingURL=coffeeGame.js.map","import * as ex from \"excalibur\";\nexport class Light extends ex.Actor {\n    constructor(args) {\n        super(args);\n        this.lit = false;\n    }\n    onInitialize() {\n        this.on(\"pointerup\", (evt) => {\n            if (this.up)\n                this.up.lit = !this.up.lit;\n            if (this.down)\n                this.down.lit = !this.down.lit;\n            if (this.left)\n                this.left.lit = !this.left.lit;\n            if (this.right)\n                this.right.lit = !this.right.lit;\n            this.lit = !this.lit;\n        });\n    }\n    onPostUpdate() {\n        if (this.lit) {\n            this.color = ex.Color.Yellow.clone();\n        }\n        else {\n            this.color = ex.Color.Violet.clone();\n        }\n    }\n}\n//# sourceMappingURL=light.js.map","import * as ex from \"excalibur\";\nimport { MiniGame } from \"../miniGame\";\nimport { Light } from \"./light\";\nimport Config from \"../../config\";\nexport class PrinterGame extends MiniGame {\n    constructor(scene, bottomSubscene) {\n        super(scene, bottomSubscene);\n        this.miniGameActors = [];\n        this._lights = [];\n        this.scene = scene;\n    }\n    getLight(x, y) {\n        let index = x + y * Config.PrinterMiniGame.GridDimension;\n        if (index < 0 || index > this._lights.length - 1) {\n            return null;\n        }\n        if (x >= Config.PrinterMiniGame.GridDimension ||\n            y >= Config.PrinterMiniGame.GridDimension) {\n            return null;\n        }\n        if (x < 0 || y < 0) {\n            return null;\n        }\n        return this._lights[index];\n    }\n    setup() {\n        let startX = this.scene.engine.halfDrawWidth;\n        let startY = this.scene.engine.halfDrawHeight + 100;\n        this._lights = [];\n        for (let i = 0; i <\n            Config.PrinterMiniGame.GridDimension *\n                Config.PrinterMiniGame.GridDimension; i++) {\n            let x = i % Config.PrinterMiniGame.GridDimension;\n            let y = Math.floor(i / Config.PrinterMiniGame.GridDimension);\n            this._lights[i] = new Light({\n                x: x * 30 + startX,\n                y: y * 30 + startY,\n                width: 20,\n                height: 20,\n                color: ex.Color.Violet.clone()\n            });\n        }\n        let width = Config.PrinterMiniGame.GridDimension;\n        for (let i = 0; i < this._lights.length; i++) {\n            let light = this._lights[i];\n            let x = i % Config.PrinterMiniGame.GridDimension;\n            let y = Math.floor(i / Config.PrinterMiniGame.GridDimension);\n            light.up = this.getLight(x, y - 1);\n            light.down = this.getLight(x, y + 1);\n            light.left = this.getLight(x - 1, y);\n            light.right = this.getLight(x + 1, y);\n        }\n        let litLight = Config.Rand.pickOne(this._lights);\n        litLight.lit = true;\n        this.miniGameActors = this._lights;\n    }\n}\n//# sourceMappingURL=printer-game.js.map","import * as ex from \"excalibur\";\nimport { CollatingGame } from \"./collating-game/collatingGame\";\nimport { CoffeeGame } from \"./coffee-game/coffeeGame\";\nimport Config from \"../config\";\nimport { PrinterGame } from \"./printer-game/printer-game\";\nexport class BottomSubscene {\n    constructor() {\n        this.miniGames = [];\n    }\n    setup(scene) {\n        this.collatingGame = new CollatingGame(scene, Config.MiniGames.Collating.NumberOfWinsToProceed, this);\n        this.miniGames.push(this.collatingGame);\n        this.coffeeGame = new CoffeeGame(scene, this);\n        this.miniGames.push(this.coffeeGame);\n        this.printerGame = new PrinterGame(scene, this);\n        this.miniGames.push(this.printerGame);\n        this.startRandomMiniGame();\n    }\n    teardown(scene) {\n        this.currentMiniGame.cleanUp();\n    }\n    startRandomMiniGame() {\n        this.currentMiniGame = this.miniGames[ex.Util.randomIntInRange(0, this.miniGames.length - 1)];\n        this.currentMiniGame.start();\n    }\n}\n//# sourceMappingURL=bottom.js.map","import * as ex from \"excalibur\";\nimport { TopSubscene } from \"./top/top\";\nimport { BottomSubscene } from \"./bottom/bottom\";\nexport class ScnMain extends ex.Scene {\n    onInitialize(engine) {\n        this._top = new TopSubscene(this.engine);\n        this._bottom = new BottomSubscene();\n    }\n    onActivate() {\n        this._top.setup(this);\n        this._bottom.setup(this);\n    }\n    onDeactivate() {\n        this._top.teardown(this);\n        this._bottom.teardown(this);\n    }\n}\n//# sourceMappingURL=scnMain.js.map","import { Engine, Loader, Logger, Input, Physics } from \"excalibur\";\nimport { ScnEnd } from \"./scnEnd\";\nimport { ScnMain } from \"./scnMain\";\nimport Resources from \"./resources\";\nimport Config from \"./config\";\nvar game = new Engine({\n    width: Config.GameWidth,\n    height: Config.GameHeight\n});\n// Physics\n// ex.Physics.collisionResolutionStrategy = ex.CollisionResolutionStrategy.RigidBody\n// ex.Physics.allowRigidBodyRotation = false;\nPhysics.checkForFastBodies = true;\n// create an asset loader\nvar loader = new Loader();\n// queue resources for loading\nfor (var r in Resources) {\n    loader.addResource(Resources[r]);\n}\ngame.addScene(\"main\", new ScnMain(game));\ngame.addScene(\"end\", new ScnEnd(game));\n// uncomment loader after adding resources\ngame.start(loader).then(() => {\n    game.goToScene(\"main\");\n    // TODO: Turn on analytics\n    //   Analytics.publish({\n    //      commit: 'test',\n    //      seed: -1,\n    //      started: -1,\n    //      date: 'test'\n    //   });\n});\n// TODO remove /////////////////////////////////////////////////////\nvar gamePaused = false;\ngame.input.keyboard.on(\"down\", (keyDown) => {\n    switch (keyDown.key) {\n        case Input.Keys.P:\n            if (gamePaused) {\n                game.start();\n                Logger.getInstance().info(\"game resumed\");\n            }\n            else {\n                game.stop();\n                Logger.getInstance().info(\"game paused\");\n            }\n            gamePaused = !gamePaused;\n            break;\n        case Input.Keys.Semicolon:\n            game.isDebug = !game.isDebug;\n            break;\n        case Input.Keys.Esc:\n            game.goToScene(\"end\");\n            break;\n    }\n});\n////////////////////////////////////////////////////////////////////\n//# sourceMappingURL=game.js.map"],"names":["ex.Scene","ex.Label","ex.TextAlign","ex.Actor","ex.Color","Random","Vector","Texture","Sound","ex.Vector","ex.CollisionType","ex.ParticleEmitter","ex.EmitterType","ex.Side","ex.Logger","ex.Util","this","ex.FontUnit","__rest","ex.Sprite","ex.Timer","Obstacles","Actor","Color","Label","Engine","Physics","Loader","Input","Logger"],"mappings":"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"}
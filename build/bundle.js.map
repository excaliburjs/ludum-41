{"version":3,"file":"bundle.js","sources":["config.js","resources.js","top/top-player.js","top/obstacles/obstacle.js","top/obstacles/crate.js","top/obstacles/crates.js","top/obstacles/index.js","top/floor.js","top/health.js","top/top.js","bottom/bottom.js","scnMain.js","game.js"],"sourcesContent":["import { Random, Vector } from \"excalibur\";\nconst rand = new Random(12345678910);\nexport default {\n    AnalyticsEndpoint: \"https://ludum41stats.azurewebsites.net/api/HttpLudum41StatsTrigger?code=eumYNdyRh0yfBAk0NLrfrKkXxtGsX7/Jo5gAcYo13k3GcVFNBdG3yw==\",\n    GameWidth: 800,\n    GameHeight: 600,\n    // Top Floor config\n    Floor: {\n        Speed: -100,\n        Height: 5\n    },\n    // Top Player config\n    TopPlayer: {\n        Width: 30,\n        Height: 50\n    },\n    Health: {\n        Pos: new Vector(10, 10),\n        Default: 10,\n        FontSize: 50\n    },\n    /**\n     * Obstacles spawn interval\n     */\n    ObstacleSpawnMinInterval: 1000,\n    ObstacleSpawnMaxInterval: 3000,\n    Rand: rand\n};\n//# sourceMappingURL=config.js.map","import { Texture, Sound } from \"excalibur\";\nexport default {\n    sampleImg: new Texture(\"game/assets/img/sample-image.png\"),\n    txBike: new Texture(\"game/assets/img/bike.png\"),\n    txCrate: new Texture(\"game/assets/img/crate.png\"),\n    sampleSnd: new Sound(\"game/assets/snd/sample-sound.wav\")\n};\n//# sourceMappingURL=resources.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nimport Resources from \"../resources\";\nexport class TopPlayer extends ex.Actor {\n    constructor(engine) {\n        super({\n            x: engine.drawWidth / 4,\n            y: engine.drawHeight / 4,\n            acc: new ex.Vector(0, 800),\n            width: Config.TopPlayer.Width,\n            height: Config.TopPlayer.Height,\n            color: ex.Color.Blue,\n            collisionType: ex.CollisionType.Active\n        });\n        this.engine = engine;\n        this.canJump = true;\n        engine.input.pointers.primary.on(\"down\", this.handleInput.bind(this));\n        engine.input.keyboard.on(\"press\", this.handleInput.bind(this));\n        this.on(\"precollision\", this.handleCollision.bind(this));\n    }\n    onInitialize() {\n        this.addDrawing(Resources.txBike);\n    }\n    // le-sigh workaround for odd collision tunneling issue\n    handleCollision(event) {\n        this.vel.y = 0;\n        this.acc = ex.Vector.Zero.clone();\n        if (event.side === ex.Side.Bottom) {\n            this.canJump = true;\n        }\n    }\n    handleInput(event) {\n        ex.Logger.getInstance().debug(\"event:\", event);\n        if (event instanceof ex.Input.PointerEvent) {\n            if (event.worldY < this.engine.halfDrawHeight) {\n                this.jump();\n            }\n        }\n        if (event instanceof ex.Input.KeyEvent &&\n            event.key === ex.Input.Keys.Space) {\n            this.jump();\n        }\n    }\n    jump() {\n        if (this.canJump) {\n            this.vel = this.vel.add(new ex.Vector(0, -400));\n            this.acc = new ex.Vector(0, 800);\n            this.canJump = false;\n        }\n    }\n    onPostUpdate(engine, delta) {\n        // todo postupdate\n    }\n}\n//# sourceMappingURL=top-player.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as ex from \"excalibur\";\nimport { TopPlayer } from \"../top-player\";\nexport class Obstacle extends ex.Actor {\n    /**\n     *\n     */\n    constructor(_a) {\n        var { x, y, speed, topSubscene } = _a, props = __rest(_a, [\"x\", \"y\", \"speed\", \"topSubscene\"]);\n        super(Object.assign({ x,\n            y, collisionType: ex.CollisionType.Passive, vel: new ex.Vector(speed, 0) }, props));\n        this.onExitViewPort = (engine) => (e) => {\n            // When obstacle passes out of view to the left,\n            // it should be killed\n            if (e.target.x < engine.getWorldBounds().left) {\n                ex.Logger.getInstance().debug(\"Obstacle exited stage left\", e.target);\n                e.target.kill();\n            }\n        };\n        this.onCollision = (event) => {\n            if (event.other instanceof TopPlayer) {\n                this.topSubscene.healthMeter.health--;\n            }\n        };\n        this.topSubscene = topSubscene;\n        // Anchor to bottom since\n        // we will be placing it on a \"floor\"\n        this.anchor.setTo(0.5, 1);\n    }\n    onInitialize(engine) {\n        this.on(\"exitviewport\", this.onExitViewPort(engine));\n        this.on(\"collisionstart\", this.onCollision);\n    }\n}\n//# sourceMappingURL=obstacle.js.map","import Resources from \"../../resources\";\nimport { Obstacle } from \"./obstacle\";\nexport class Crate extends Obstacle {\n    constructor(props) {\n        super(Object.assign({}, props, { width: 16, height: 16 }));\n    }\n    onInitialize(engine) {\n        super.onInitialize(engine);\n        this.addDrawing(Resources.txCrate);\n    }\n}\n//# sourceMappingURL=crate.js.map","import * as ex from \"excalibur\";\nimport Resources from \"../../resources\";\nimport { Obstacle } from \"./obstacle\";\nexport class Crates extends Obstacle {\n    constructor(props) {\n        super(Object.assign({}, props, { width: 16, height: 16 * 3 }));\n    }\n    onInitialize(engine) {\n        super.onInitialize(engine);\n        const crateArgs = {\n            width: 16,\n            height: 16\n        };\n        const crate1 = new ex.Actor(Object.assign({}, crateArgs, { y: 0 }));\n        const crate2 = new ex.Actor(Object.assign({}, crateArgs, { y: -16 }));\n        const crate3 = new ex.Actor(Object.assign({}, crateArgs, { y: -32 }));\n        crate1.addDrawing(Resources.txCrate);\n        crate2.addDrawing(Resources.txCrate);\n        crate3.addDrawing(Resources.txCrate);\n        this.add(crate1);\n        this.add(crate2);\n        this.add(crate3);\n    }\n}\n//# sourceMappingURL=crates.js.map","import { Crate } from \"./crate\";\nimport { Crates } from \"./crates\";\nconst obstacles = [Crate, Crates];\nexport default obstacles;\n//# sourceMappingURL=index.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nimport Obstacles from \"./obstacles\";\nexport class Floor extends ex.Actor {\n    /**\n     *\n     */\n    constructor(engine, topSubscene) {\n        super({\n            x: 0,\n            y: engine.drawHeight / 2,\n            width: engine.drawWidth * 2,\n            height: Config.Floor.Height,\n            color: ex.Color.Black,\n            anchor: new ex.Vector(0, 0.5),\n            collisionType: ex.CollisionType.Fixed\n        });\n        this.topSubscene = topSubscene;\n    }\n    onInitialize(engine) {\n        this._spawnTimer = new ex.Timer(() => this.spawnObstacle(engine), 1000, true);\n        this.scene.add(this._spawnTimer);\n    }\n    spawnObstacle(engine) {\n        const x = engine.drawWidth + 200;\n        const ObstacleDef = Obstacles[Config.Rand.integer(0, Obstacles.length - 1)];\n        const ob = new ObstacleDef({\n            x,\n            y: this.getTop(),\n            speed: Config.Floor.Speed,\n            topSubscene: this.topSubscene\n        });\n        ex.Logger.getInstance().debug(\"Spawned obstacle\", ob);\n        this.scene.add(ob);\n        const newInterval = Config.Rand.integer(Config.ObstacleSpawnMinInterval, Config.ObstacleSpawnMaxInterval);\n        this._spawnTimer.reset(newInterval);\n    }\n}\n//# sourceMappingURL=floor.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nexport class TopHealth extends ex.Label {\n    constructor(engine) {\n        super({\n            x: Config.Health.Pos.x,\n            y: Config.Health.Pos.y + Config.Health.FontSize,\n            fontSize: Config.Health.FontSize,\n            fontUnit: ex.FontUnit.Px,\n            anchor: ex.Vector.Zero.clone(),\n            color: ex.Color.Red,\n            text: Config.Health.Default.toString()\n        });\n        this.health = Config.Health.Default;\n    }\n    onPostUpdate(engine, delta) {\n        if (this.health < 1) {\n            // todo trigger endgame\n        }\n        this.text = this.health.toString();\n    }\n}\n//# sourceMappingURL=health.js.map","import { Floor } from \"./floor\";\nimport { TopPlayer } from \"./top-player\";\nimport { TopHealth } from \"./health\";\nexport class TopSubscene {\n    constructor(_engine) {\n        this._engine = _engine;\n        this.floor = new Floor(_engine, this);\n        this.player = new TopPlayer(_engine);\n        this.healthMeter = new TopHealth(_engine);\n    }\n    setup(scene) {\n        scene.add(this.floor);\n        scene.add(this.player);\n        scene.add(this.healthMeter);\n    }\n}\n//# sourceMappingURL=top.js.map","export class BottomSubscene {\n    constructor() { }\n    setup(scene) { }\n    startPaperCollating() {\n        // TODO load the paper collating mini-game\n    }\n    startTalkToCoworker() {\n        // TODO load the coworker conversation mini-game\n    }\n    startPrinter() {\n        // TODO start the printer mini-game\n    }\n}\n//# sourceMappingURL=bottom.js.map","import * as ex from \"excalibur\";\nimport { TopSubscene } from \"./top/top\";\nimport { BottomSubscene } from \"./bottom/bottom\";\nexport class ScnMain extends ex.Scene {\n    constructor(engine) {\n        super(engine);\n        let top = new TopSubscene(engine);\n        let bottom = new BottomSubscene();\n        top.setup(this);\n        bottom.setup(this);\n    }\n    onInitialize(engine) { }\n}\n//# sourceMappingURL=scnMain.js.map","import { Engine, Loader, Logger, Input, Physics } from \"excalibur\";\nimport { ScnMain } from \"./scnMain\";\nimport Resources from \"./resources\";\nimport Config from \"./config\";\nvar game = new Engine({\n    width: Config.GameWidth,\n    height: Config.GameHeight\n});\n// Physics\n// ex.Physics.collisionResolutionStrategy = ex.CollisionResolutionStrategy.RigidBody\n// ex.Physics.allowRigidBodyRotation = false;\nPhysics.checkForFastBodies = true;\n// create an asset loader\nvar loader = new Loader();\n// queue resources for loading\nfor (var r in Resources) {\n    loader.addResource(Resources[r]);\n}\nvar scnMain = new ScnMain(game);\ngame.addScene(\"main\", scnMain);\n// uncomment loader after adding resources\ngame.start(loader).then(() => {\n    game.goToScene(\"main\");\n    // TODO: Turn on analytics\n    //   Analytics.publish({\n    //      commit: 'test',\n    //      seed: -1,\n    //      started: -1,\n    //      date: 'test'\n    //   });\n});\n// TODO remove /////////////////////////////////////////////////////\nvar gamePaused = false;\ngame.input.keyboard.on(\"down\", (keyDown) => {\n    switch (keyDown.key) {\n        case Input.Keys.P:\n            if (gamePaused) {\n                game.start();\n                Logger.getInstance().info(\"game resumed\");\n            }\n            else {\n                game.stop();\n                Logger.getInstance().info(\"game paused\");\n            }\n            gamePaused = !gamePaused;\n            break;\n        case Input.Keys.Semicolon:\n            game.isDebug = !game.isDebug;\n            break;\n    }\n});\n////////////////////////////////////////////////////////////////////\n//# sourceMappingURL=game.js.map"],"names":["Random","Vector","Texture","Sound","ex.Actor","ex.Vector","ex.Color","ex.CollisionType","ex.Side","ex.Logger","ex.Input","this","ex.Timer","Obstacles","ex.Label","ex.FontUnit","ex.Scene","Engine","Physics","Loader","Input","Logger"],"mappings":"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"}
{"version":3,"file":"bundle.js","sources":["config.js","top/obstacle.js","top/floor.js","top/top-player.js","top/top.js","bottom/bottom.js","scnMain.js","resources.js","game.js"],"sourcesContent":["import { Random } from \"excalibur\";\nconst rand = new Random(12345678910);\nexport default {\n    AnalyticsEndpoint: \"https://ludum41stats.azurewebsites.net/api/HttpLudum41StatsTrigger?code=eumYNdyRh0yfBAk0NLrfrKkXxtGsX7/Jo5gAcYo13k3GcVFNBdG3yw==\",\n    GameWidth: 800,\n    GameHeight: 600,\n    // Top Floor config\n    Floor: {\n        Speed: -100,\n        Height: 20\n    },\n    // Top Player config\n    TopPlayer: {\n        Width: 30,\n        Height: 50\n    },\n    /**\n     * Obstacles spawn interval\n     */\n    ObstacleSpawnMinInterval: 1000,\n    ObstacleSpawnMaxInterval: 3000,\n    Rand: rand\n};\n//# sourceMappingURL=config.js.map","import * as ex from \"excalibur\";\nexport class Obstacle extends ex.Actor {\n    /**\n     *\n     */\n    constructor({ height, x, y, speed }) {\n        super({\n            x,\n            y,\n            height,\n            width: 10,\n            color: ex.Color.Yellow,\n            vel: new ex.Vector(speed, 0)\n        });\n        this.onExitViewPort = (engine) => (e) => {\n            // When obstacle passes out of view to the left,\n            // it should be killed\n            if (e.target.x < engine.getWorldBounds().left) {\n                ex.Logger.getInstance().info(\"Obstacle exited stage left\", e.target);\n                e.target.kill();\n            }\n        };\n        // Anchor to bottom since\n        // we will be placing it on a \"floor\"\n        this.anchor.setTo(0.5, 1);\n    }\n    onInitialize(engine) {\n        this.on(\"exitviewport\", this.onExitViewPort(engine));\n    }\n}\nObstacle.minHeight = 10;\nObstacle.maxHeight = 50;\n//# sourceMappingURL=obstacle.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nimport { Obstacle } from \"./obstacle\";\nexport class Floor extends ex.Actor {\n    /**\n     *\n     */\n    constructor(engine) {\n        super({\n            x: 0,\n            y: engine.drawHeight / 2,\n            width: engine.drawWidth * 2,\n            height: Config.Floor.Height,\n            color: ex.Color.Red,\n            anchor: new ex.Vector(0, 0.5),\n            collisionType: ex.CollisionType.Fixed\n        });\n    }\n    onInitialize(engine) {\n        this._spawnTimer = new ex.Timer(() => this.spawnObstacle(engine), 1000, true);\n        this.scene.add(this._spawnTimer);\n    }\n    onPostUpdate(_engine, delta) {\n        if (this.x < -this.getWidth() / 2) {\n            ex.Logger.getInstance().info(\"floor reset!\");\n            this.x = 0;\n        }\n    }\n    spawnObstacle(engine) {\n        const x = engine.drawWidth + 200;\n        const height = Config.Rand.integer(Obstacle.minHeight, Obstacle.maxHeight);\n        const ob = new Obstacle({ height, x, y: this.getTop(), speed: this.vel.x });\n        ex.Logger.getInstance().info(\"Spawned obstacle\", ob);\n        this.scene.add(ob);\n        const newInterval = Config.Rand.integer(Config.ObstacleSpawnMinInterval, Config.ObstacleSpawnMaxInterval);\n        this._spawnTimer.reset(newInterval);\n    }\n}\n//# sourceMappingURL=floor.js.map","import * as ex from \"excalibur\";\nimport Config from \"../config\";\nexport class TopPlayer extends ex.Actor {\n    constructor(engine) {\n        super({\n            x: engine.drawWidth / 4,\n            y: engine.drawHeight / 4,\n            acc: new ex.Vector(0, 800),\n            width: Config.TopPlayer.Width,\n            height: Config.TopPlayer.Height,\n            color: ex.Color.Blue,\n            collisionType: ex.CollisionType.Active\n        });\n        engine.input.pointers.primary.on(\"down\", this.handleInput.bind(this));\n        engine.input.keyboard.on(\"press\", this.handleInput.bind(this));\n        this.on(\"precollision\", this.handleCollision.bind(this));\n    }\n    // le-sigh workaround for odd collision tunneling issue\n    handleCollision(event) {\n        this.vel.y = 0;\n        this.acc = ex.Vector.Zero.clone();\n    }\n    handleInput(event) {\n        console.log(\"event:\", event);\n        this.jump();\n    }\n    jump() {\n        this.vel = this.vel.add(new ex.Vector(0, -400));\n        this.acc = new ex.Vector(0, 800);\n    }\n    onPostUpdate(engine, delta) {\n        // todo postupdate\n    }\n}\n//# sourceMappingURL=top-player.js.map","import { Floor } from \"./floor\";\nimport { TopPlayer } from \"./top-player\";\nexport class Top {\n    constructor(_engine) {\n        this._engine = _engine;\n        this.floor = new Floor(_engine);\n        this.player = new TopPlayer(_engine);\n    }\n    setup(scene) {\n        scene.add(this.floor);\n        scene.add(this.player);\n    }\n}\n//# sourceMappingURL=top.js.map","export class Bottom {\n    constructor() { }\n    setup(scene) { }\n    startPaperCollating() {\n        // TODO load the paper collating mini-game\n    }\n    startTalkToCoworker() {\n        // TODO load the coworker conversation mini-game\n    }\n    startPrinter() {\n        // TODO start the printer mini-game\n    }\n}\n//# sourceMappingURL=bottom.js.map","import * as ex from \"excalibur\";\nimport { Top } from \"./top/top\";\nimport { Bottom } from \"./bottom/bottom\";\nexport class ScnMain extends ex.Scene {\n    constructor(engine) {\n        super(engine);\n        let top = new Top(engine);\n        let bottom = new Bottom();\n        top.setup(this);\n        bottom.setup(this);\n    }\n    onInitialize(engine) { }\n}\n//# sourceMappingURL=scnMain.js.map","import { Texture, Sound } from \"excalibur\";\nexport default {\n    sampleImg: new Texture(\"game/assets/img/sample-image.png\"),\n    sampleSnd: new Sound(\"game/assets/snd/sample-sound.wav\")\n};\n//# sourceMappingURL=resources.js.map","import { Engine, Loader, Logger, Input, Physics } from \"excalibur\";\nimport { ScnMain } from \"./scnMain\";\nimport Resources from \"./resources\";\nimport Config from \"./config\";\nvar game = new Engine({\n    width: Config.GameWidth,\n    height: Config.GameHeight\n});\n// Physics\n// ex.Physics.collisionResolutionStrategy = ex.CollisionResolutionStrategy.RigidBody\n// ex.Physics.allowRigidBodyRotation = false;\nPhysics.checkForFastBodies = true;\n// create an asset loader\nvar loader = new Loader();\n// queue resources for loading\nfor (var r in Resources) {\n    loader.addResource(Resources[r]);\n}\nvar scnMain = new ScnMain(game);\ngame.addScene(\"main\", scnMain);\n// uncomment loader after adding resources\ngame.start(loader).then(() => {\n    game.goToScene(\"main\");\n    // TODO: Turn on analytics\n    //   Analytics.publish({\n    //      commit: 'test',\n    //      seed: -1,\n    //      started: -1,\n    //      date: 'test'\n    //   });\n});\n// TODO remove /////////////////////////////////////////////////////\nvar gamePaused = false;\ngame.input.keyboard.on(\"down\", (keyDown) => {\n    switch (keyDown.key) {\n        case Input.Keys.P:\n            if (gamePaused) {\n                game.start();\n                Logger.getInstance().info(\"game resumed\");\n            }\n            else {\n                game.stop();\n                Logger.getInstance().info(\"game paused\");\n            }\n            gamePaused = !gamePaused;\n            break;\n        case Input.Keys.Semicolon:\n            game.isDebug = !game.isDebug;\n            break;\n    }\n});\n////////////////////////////////////////////////////////////////////\n//# sourceMappingURL=game.js.map"],"names":["Random","ex.Actor","ex.Color","ex.Vector","ex.Logger","ex.CollisionType","ex.Timer","ex.Scene","Texture","Sound","Engine","Physics","Loader","Input","Logger"],"mappings":"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"}